<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="6" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-22T05:59:40Z" name="Search Test Suite" finished-at="2024-08-22T06:00:01Z" duration-ms="20780">
    <groups>
    </groups>
    <test started-at="2024-08-22T05:59:40Z" name="REGRESSION TEST SPRINT 1" finished-at="2024-08-22T06:00:01Z" duration-ms="20780">
      <class name="sprint1.testcase.TC4_Login_Negative">
        <test-method is-config="true" signature="setUpBrowser()[pri:0, instance:sprint1.testcase.TC4_Login_Negative@5db250b4]" started-at="2024-08-21T23:59:49Z" name="setUpBrowser" finished-at="2024-08-21T23:59:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowser -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint1.testcase.TC4_Login_Negative@5db250b4]" started-at="2024-08-21T23:59:49Z" name="beforeMethod" finished-at="2024-08-21T23:59:52Z" duration-ms="2992" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint1.testcase.TC4_Login_Negative.TC4_Login()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DEV]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:sprint1.testcase.TC4_Login_Negative@5db250b4]" started-at="2024-08-21T23:59:52Z" name="beforeMethod" finished-at="2024-08-21T23:59:52Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC4_Login()[pri:0, instance:sprint1.testcase.TC4_Login_Negative@5db250b4]" started-at="2024-08-21T23:59:52Z" name="TC4_Login" finished-at="2024-08-21T23:59:52Z" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC4_Login -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:sprint1.testcase.TC4_Login_Negative@5db250b4]" started-at="2024-08-21T23:59:52Z" name="afterMethod" finished-at="2024-08-21T23:59:52Z" duration-ms="146" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint1.testcase.TC4_Login_Negative.TC4_Login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:sprint1.testcase.TC4_Login_Negative@5db250b4]" started-at="2024-08-21T23:59:52Z" name="tearDown" finished-at="2024-08-21T23:59:52Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- sprint1.testcase.TC4_Login_Negative -->
      <class name="sprint1.testcase.TC2_Login">
        <test-method is-config="true" signature="suiteSetup()[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:40Z" name="suiteSetup" finished-at="2024-08-21T23:59:40Z" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteSetup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:42Z" name="beforeMethod" finished-at="2024-08-21T23:59:44Z" duration-ms="1867" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint1.testcase.TC2_Login.TC2_Login()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DEV]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="setUpBrowser()[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:42Z" name="setUpBrowser" finished-at="2024-08-21T23:59:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowser -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:44Z" name="beforeMethod" finished-at="2024-08-21T23:59:44Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC2_Login()[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:44Z" name="TC2_Login" finished-at="2024-08-21T23:59:45Z" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC2_Login -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:45Z" name="afterMethod" finished-at="2024-08-21T23:59:45Z" duration-ms="139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint1.testcase.TC2_Login.TC2_Login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:45Z" name="beforeMethod" finished-at="2024-08-21T23:59:46Z" duration-ms="1503" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint1.testcase.TC2_Login.TC2_Login_UserName()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DEV]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:46Z" name="beforeMethod" finished-at="2024-08-21T23:59:46Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC2_Login_UserName()[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:46Z" name="TC2_Login_UserName" finished-at="2024-08-21T23:59:46Z" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC2_Login_UserName -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:46Z" name="afterMethod" finished-at="2024-08-21T23:59:47Z" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint1.testcase.TC2_Login.TC2_Login_UserName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:47Z" name="beforeMethod" finished-at="2024-08-21T23:59:48Z" duration-ms="1625" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint1.testcase.TC2_Login.TC2_Login_Constants()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DEV]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:48Z" name="beforeMethod" finished-at="2024-08-21T23:59:48Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC2_Login_Constants()[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:48Z" name="TC2_Login_Constants" finished-at="2024-08-21T23:59:48Z" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC2_Login_Constants -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:48Z" name="afterMethod" finished-at="2024-08-21T23:59:49Z" duration-ms="127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint1.testcase.TC2_Login.TC2_Login_Constants()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-21T23:59:49Z" name="tearDown" finished-at="2024-08-21T23:59:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:sprint1.testcase.TC2_Login@13c10b87]" started-at="2024-08-22T00:00:01Z" name="afterSuite" finished-at="2024-08-22T00:00:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- sprint1.testcase.TC2_Login -->
      <class name="sprint1.testcase.TC1_OpenBrowser">
        <test-method is-config="true" signature="setUpBrowser()[pri:0, instance:sprint1.testcase.TC1_OpenBrowser@2fd6b6c7]" started-at="2024-08-21T23:59:40Z" name="setUpBrowser" finished-at="2024-08-21T23:59:40Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowser -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint1.testcase.TC1_OpenBrowser@2fd6b6c7]" started-at="2024-08-21T23:59:40Z" name="beforeMethod" finished-at="2024-08-21T23:59:42Z" duration-ms="2436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint1.testcase.TC1_OpenBrowser.OpenBrowser()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DEV]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="OpenBrowser()[pri:0, instance:sprint1.testcase.TC1_OpenBrowser@2fd6b6c7]" started-at="2024-08-21T23:59:42Z" name="OpenBrowser" finished-at="2024-08-21T23:59:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenBrowser -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:sprint1.testcase.TC1_OpenBrowser@2fd6b6c7]" started-at="2024-08-21T23:59:42Z" name="afterMethod" finished-at="2024-08-21T23:59:42Z" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint1.testcase.TC1_OpenBrowser.OpenBrowser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:sprint1.testcase.TC1_OpenBrowser@2fd6b6c7]" started-at="2024-08-21T23:59:42Z" name="tearDown" finished-at="2024-08-21T23:59:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- sprint1.testcase.TC1_OpenBrowser -->
      <class name="sprint1.testcase.TC5_Buy_BackPack">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method, java.lang.String)[pri:0, instance:sprint1.testcase.TC5_Buy_BackPack@5bfa9431]" started-at="2024-08-21T23:59:52Z" name="beforeMethod" finished-at="2024-08-22T00:00:00Z" duration-ms="7716" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint1.testcase.TC5_Buy_BackPack.TC5_Buy_BackPack()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DEV]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="setUpBrowser()[pri:0, instance:sprint1.testcase.TC5_Buy_BackPack@5bfa9431]" started-at="2024-08-21T23:59:52Z" name="setUpBrowser" finished-at="2024-08-21T23:59:52Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowser -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:sprint1.testcase.TC5_Buy_BackPack@5bfa9431]" started-at="2024-08-22T00:00:00Z" name="beforeMethod" finished-at="2024-08-22T00:00:00Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC5_Buy_BackPack()[pri:0, instance:sprint1.testcase.TC5_Buy_BackPack@5bfa9431]" started-at="2024-08-22T00:00:00Z" name="TC5_Buy_BackPack" finished-at="2024-08-22T00:00:01Z" duration-ms="865" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC5_Buy_BackPack -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:sprint1.testcase.TC5_Buy_BackPack@5bfa9431]" started-at="2024-08-22T00:00:01Z" name="afterMethod" finished-at="2024-08-22T00:00:01Z" duration-ms="154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sprint1.testcase.TC5_Buy_BackPack.TC5_Buy_BackPack()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:sprint1.testcase.TC5_Buy_BackPack@5bfa9431]" started-at="2024-08-22T00:00:01Z" name="tearDown" finished-at="2024-08-22T00:00:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- sprint1.testcase.TC5_Buy_BackPack -->
    </test> <!-- REGRESSION TEST SPRINT 1 -->
  </suite> <!-- Search Test Suite -->
</testng-results>
